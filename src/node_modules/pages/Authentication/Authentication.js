import React, { useState } from 'react';
import Paper from '@material-ui/core/Paper';
import { makeStyles } from '@material-ui/core/styles';
import "./Authentication.scss";
import Typography from '@material-ui/core/Typography';
import Link from '@material-ui/core/Link';
import { withRouter } from "react-router-dom";
import TextField from '@material-ui/core/TextField';
import Button from '@material-ui/core/Button';
import LangsTranslate from "LangsTranslate/LangsTranslate.json"

const useStyles = makeStyles({
  linkStyle: {
    fontSize: "16px",
    cursor: "pointer",
  }
})


const Authentication = (props) => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const { currentLang } = props;
  const classes = useStyles();

  const linkHandler = (e) => {
    e.preventDefault();
    props.history.push("/register");
  }

  const handleSubmit = (e) => {
    e.preventDefault();
    props.history.location.pathname === "/register"
      ? createAccount()
      : loginAccount();
  }
  const createAccount = () => {

  }
  const loginAccount = () => {

  }
  return (
    <div className="Authentication">
      <div className="container">
        <div className="Authentication__body">
          <Paper>
            <div className="Authentication__auth auth">
              <Typography variant="h4" component="h2">
                {props.history.location.pathname === "/register"
                  ? LangsTranslate[currentLang].Auth.title["title-regist"]
                  : LangsTranslate[currentLang].Auth.title["title-sign"]}
              </Typography>
              <form onSubmit={handleSubmit} action="#" method="GET">
                <fieldset className="auth__field">
                  <fieldset className="auth__email">
                    <TextField
                      type="email"
                      placeholder="your@gmail.com"
                      label={LangsTranslate[currentLang].Auth.form.email.label}
                      variant="filled"
                      value={email}
                      onChange={e => setEmail(e.target.value)} />
                  </fieldset>
                  <fieldset className="auth__pass">
                    <TextField
                      type="password"
                      placeholder="password"
                      label={LangsTranslate[currentLang].Auth.form.password["label-enter"]}
                      variant="filled"
                      value={password}
                      onChange={e => setPassword(e.target.value)}
                      style={props.history.location.pathname === "/register"
                        ? null
                        : { margin: "0px 0px 20px 0px" }} />
                  </fieldset>
                  {props.history.location.pathname === "/register"
                    ? <fieldset className="auth__submit-pass">
                      <TextField
                        type="password"
                        placeholder="password"
                        label={LangsTranslate[currentLang].Auth.form.password["label-submit"]}
                        variant="filled"
                        value={password}
                        onChange={e => setPassword(e.target.value)}
                        style={{ margin: "0px 0px 20px 0px" }} />
                    </fieldset>
                    : null}
                  <Button
                    variant="contained"
                    color="primary"
                    type="submit">{props.history.location.pathname === "/register"
                      ? LangsTranslate[currentLang].Auth.form.submitButton["reg"]
                      : LangsTranslate[currentLang].Auth.form.submitButton["sign"]}</Button>
                </fieldset>
              </form>
              {props.history.location.pathname === "/register" ? null
                : <p><Link
                  onClick={linkHandler}
                  className={classes.linkStyle}
                  color="primary">{LangsTranslate[currentLang].Auth.form.LinkToRegistration}</Link>
                </p>}
            </div>
          </Paper>
        </div>
      </div>
    </div >
  );
}

export default withRouter(Authentication);