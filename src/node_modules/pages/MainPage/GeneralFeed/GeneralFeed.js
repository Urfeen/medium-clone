import React, { useState, useEffect } from 'react';
import Feed from "components/Feed/Feed";
import { projectDB } from "firebaseConfig/firebaseConfig.js";
import Button from '@material-ui/core/Button';
import moment from 'moment';

const GeneralFeed = (props) => {
  const { currentLang } = props;
  const [articles, setArticles] = useState(null);
  const [isNoArticles, setIsNoArticles] = useState(false);
  const [articlesAmount, setArticlesAmount] = useState(3);

  React.useEffect(() => {
    projectDB.ref('articles/').limitToLast(articlesAmount).on('value', (snapshot) => {
      const data = snapshot.val();
      if (data) setArticles(getArticlesInfo(data));
      else setIsNoArticles(true);
    })
    return () => { setArticles(null) };
  }, [articlesAmount])

  const getArticlesInfo = (data) => {
    const articles = [];
    Object.entries(data).reverse().map(e => {
      articles.push({ publishedDate: moment(new Date(+e[0])).format("DD.MM.YYYY"), key: e[0] });
      return Object.entries(e[1])[0];
    }).forEach((e, i) => {
      articles[i].articleOwner = getUserNameById(e[0]);
      for (let articleContent in e[1]) articles[i][articleContent] = e[1][articleContent];
    })
    return articles;
  }

  const getUserNameById = (id) => {
    let name;
    projectDB.ref("users/" + id + "/username").on("value", (snapshot) => {
      name = snapshot.val();
    })
    return name;
  }

  return (
    <div style={{ display: "grid", gap: "15px" }}>
      { articles ?
        articles.map(article => {
          return <Feed
            key={article.key}
            articleDesc={article.articleDesc}
            articleOwner={article.articleOwner}
            articleTags={article.articleTags}
            articleText={article.articleText}
            articleTitle={article.articleTitle}
            dislikes={article.dislikes}
            likes={article.likes}
            publishedDate={article.publishedDate}
            currentLang={currentLang}
          />
        }) : isNoArticles
          ? <div style={{ justifySelf: "center", margin: "10px 0px 10px 0px" }}>There is no articles</div>
          : <div style={{ justifySelf: "center", margin: "10px 0px 10px 0px" }}>Loading...</div>}
      {articles ? <Button variant="outlined" onClick={() => { setArticlesAmount(prev => prev + 3) }}>+</Button> : null}
    </div>
  );
}
export default GeneralFeed;