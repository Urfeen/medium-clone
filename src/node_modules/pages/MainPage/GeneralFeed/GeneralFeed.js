import React, { useState, useEffect } from 'react';
import Feed from "components/Feed/Feed";
import { projectDB } from "firebaseConfig/firebaseConfig.js";
import Button from '@material-ui/core/Button';
import moment from 'moment';
import AddCircleIcon from '@material-ui/icons/AddCircle';
import LangsTranslate from "LangsTranslate/LangsTranslate.json";
import Typography from "@material-ui/core/Typography";
import useMediaQuery from "@material-ui/core/useMediaQuery";

const GeneralFeed = ({ currentLang }) => {
  const [articles, setArticles] = useState(null);
  const [isNoArticles, setIsNoArticles] = useState(false);
  const [articlesAmount, setArticlesAmount] = useState(3);
  const [isEnd, setIsEnd] = useState(false);
  const isMobile = useMediaQuery('(max-width:381px)');

  useEffect(() => {
    projectDB.ref('articles/').limitToLast(articlesAmount).on('value', (snapshot) => {
      const data = snapshot.val();
      setIsEnd(snapshot.numChildren() < articlesAmount);
      if (data) setArticles(getArticlesInfo(data));
      else setIsNoArticles(true);
    })
  }, [articlesAmount])

  useEffect(() => (() => setArticles(null)), []);

  const getArticlesInfo = (data) => {
    const articles = [];
    Object.entries(data).reverse().map(e => {
      articles.push({ publishedDate: moment(new Date(+e[0])).format("DD.MM.YYYY"), key: e[0] });
      return Object.entries(e[1])[0];
    }).forEach((e, i) => {
      articles[i].articleOwner = getUserNameById(e[0]);
      articles[i].articleOwnerPhoto = getUserPhotoById(e[0]);
      for (let articleContent in e[1]) articles[i][articleContent] = e[1][articleContent];
    })
    return articles;
  }

  const getUserNameById = (id) => {
    let name;
    projectDB.ref("users/" + id + "/username").on("value", (snapshot) => {
      name = snapshot.val();
    })
    return name;
  }
  const getUserPhotoById = (id) => {
    let photo;
    projectDB.ref("users/" + id + "/userphoto").on("value", (snapshot) => {
      photo = snapshot.val();
    })
    return photo;
  }

  return (
    localStorage.getItem("currentUserId") ?
      <div style={{ display: "grid", gap: "15px" }}>
        {articles ?
          articles.map(article => {
            return <Feed
              key={article.key}
              articleDesc={article.articleDesc}
              articleOwner={article.articleOwner}
              articleTags={article.articleTags}
              articleText={article.articleText}
              articleTitle={article.articleTitle}
              dislikes={1000}
              likes={10000}
              publishedDate={article.publishedDate}
              currentLang={currentLang}
              articleOwnerPhoto={article.articleOwnerPhoto}
            />
          }) : isNoArticles
            ? <div style={{ justifySelf: "center", margin: "10px 0px 10px 0px" }}>{LangsTranslate[currentLang].Feeds.info["no-articles"]}</div>
            : <div style={{ justifySelf: "center", margin: "10px 0px 10px 0px" }}>{LangsTranslate[currentLang].Feeds.info["loading"]}</div>}
        {isEnd
          ? null
          : articles
            ? <Button
              variant="outlined"
              color="primary"
              style={{ justifySelf: "center" }}
              onClick={() => { setArticlesAmount(prev => prev + 3) }}
            ><AddCircleIcon color="primary" /></Button> : null}
      </div> :
      <div style={isMobile ? { padding: "10px" } : null}>
        <Typography variant="body1" component="p">
          {LangsTranslate[currentLang].Feeds.info.noAuth}
        </Typography>
      </div>
  );
}
export default GeneralFeed;