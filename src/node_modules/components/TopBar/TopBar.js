import React from "react";
import { NavLink } from "react-router-dom";
import "./TopBar.scss";
import NightsStayIcon from '@material-ui/icons/NightsStay';
import WbSunnyIcon from '@material-ui/icons/WbSunny';
import IconButton from '@material-ui/core/Button';
import Button from '@material-ui/core/Button';
import { makeStyles } from '@material-ui/core/styles';
import AppBar from '@material-ui/core/AppBar';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import MenuIcon from '@material-ui/icons/Menu';
import HomeIcon from '@material-ui/icons/Home';
import MenuItem from '@material-ui/core/MenuItem';
import Menu from '@material-ui/core/Menu';
import { withRouter } from "react-router-dom";
import useMediaQuery from '@material-ui/core/useMediaQuery';
import MenuBookIcon from '@material-ui/icons/MenuBook';
import CssBaseline from '@material-ui/core/CssBaseline';
import useScrollTrigger from '@material-ui/core/useScrollTrigger';
import Slide from '@material-ui/core/Slide';
import ukPhoto from "LangsTranslate/uk.png";
import enPhoto from "LangsTranslate/en.jpg";
import LangsTranslate from "LangsTranslate/LangsTranslate.json";
import Avatar from '@material-ui/core/Avatar';
import PostAddIcon from '@material-ui/icons/PostAdd';
import Container from '@material-ui/core/Container';
import { projectDB } from "firebaseConfig/firebaseConfig.js";
import Drawer from "components/Drawer/Drawer.js"

const useStyles = makeStyles((theme) => ({
  root: {
    flexGrow: 1,
  },
  menuButton: {
    borderRadius: "50%",
    minWidth: 0,
    padding: "7px",
  },
  changeThemeButton: {
    borderRadius: "50%",
    minWidth: 0,
    padding: "7px",
  },
  changeLang: {
    minWidth: 0,
    padding: "7px",
  },
  title: {
    flexGrow: 1,
    display: "flex",
    alignItems: "center"
  },
  titleLogo: {
    margin: "-2px 0px 0px 5px",
  },
  buttonText: {
    color: "#ddd",
    fontSize: "15px",
  },
  iconBurgerStyle: {
    margin: '-3px 3px 0 0',
  },

}));

function HideOnScroll(props) {
  const { children, window } = props;
  const trigger = useScrollTrigger({ target: window ? window() : undefined });
  return (
    <Slide appear={false} direction="down" in={!trigger}>
      {children}
    </Slide>
  );
}

const TopBar = (props) => {
  const [anchorEl, setAnchorEl] = React.useState(null);
  const { history, toggleTheme, toggleLang, currentLang, isDarkTheme, userName, setUserName } = props;
  const classes = useStyles();
  const isMobile = useMediaQuery('(max-width:720px)');
  const handleMenu = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleMenuClick = (pageURL) => {
    history.push(pageURL);
    setAnchorEl(null);
  };

  return (
    <div className={classes.root}>
      <CssBaseline />
      <HideOnScroll {...props}>
        <AppBar>
          <Container style={{ maxWidth: "1124px" }}>
            <Toolbar style={{ padding: "0" }}>
              <Typography variant="h5" className={classes.title}>
                Article Share
                <MenuBookIcon className={classes.titleLogo} />
              </Typography>
              {isMobile ? <Drawer /> :
                (
                  <nav className="navbar">
                    <ul className="navbar__list">
                      <li className="navbar__item">
                        <NavLink to="/" exact><Button startIcon={<HomeIcon />} className={classes.buttonText}>{LangsTranslate[currentLang].navbar.home}</Button></NavLink>
                      </li>

                      {!localStorage.getItem("currentUserId") &&
                        <>
                          <li className="navbar__item">
                            <NavLink to="/login"><Button className={classes.buttonText}>{LangsTranslate[currentLang].navbar["sign-in"]}</Button></NavLink>
                          </li>
                          <li className="navbar__item">
                            <NavLink to="/register"><Button className={classes.buttonText}>{LangsTranslate[currentLang].navbar["sign-up"]}</Button></NavLink>
                          </li>
                        </>
                      }

                      {localStorage.getItem("currentUserId") &&
                        <>
                          <li className="navbar__item">
                            <NavLink to="/articles/new">
                              <Button startIcon={<PostAddIcon />} className={classes.buttonText}>{LangsTranslate[currentLang].navbar["new-post"]}</Button>
                            </NavLink>
                          </li>
                          <li className="navbar__item">
                            <NavLink to={`/profiles/${localStorage.getItem("currentUserId")}`}>
                              <Button className={classes.buttonText}>
                                <Avatar style={{ width: "27px", height: "27px", margin: "0px 5px 0px 0px" }}></Avatar>
                                {userName}
                              </Button>
                            </NavLink>
                          </li>
                        </>
                      }
                      <li className="navbar__item toggle_lang">
                        <IconButton
                          aria-label="change lang"
                          component="span"
                          onClick={toggleLang}
                          className={classes.changeLang}
                          variant="outlined">
                          {currentLang === "uk"
                            ? <img style={{ width: "35px", opacity: "0.9" }} src={ukPhoto} alt="lang-photo" />
                            : <img style={{ width: "35px", opacity: "0.9" }} src={enPhoto} alt="lang-photo" />}
                        </IconButton>
                      </li>
                      <li className="navbar__item">
                        <IconButton
                          aria-label="change theme"
                          component="span"
                          color="secondary"
                          className={classes.changeThemeButton}
                          onClick={toggleTheme}
                          variant="contained">
                          {isDarkTheme ? <NightsStayIcon /> : <WbSunnyIcon />}
                        </IconButton>
                      </li>
                    </ul>
                  </nav>
                )}
            </Toolbar>
          </Container>
        </AppBar>
      </HideOnScroll>
    </div >
  );

}

export default withRouter(TopBar);