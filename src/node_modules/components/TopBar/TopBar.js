import React from "react";
import { NavLink } from "react-router-dom";
import "./TopBar.scss";
import NightsStayIcon from '@material-ui/icons/NightsStay';
import WbSunnyIcon from '@material-ui/icons/WbSunny';
import IconButton from '@material-ui/core/Button';
import Button from '@material-ui/core/Button';
import { makeStyles } from '@material-ui/core/styles';
import AppBar from '@material-ui/core/AppBar';
import Toolbar from '@material-ui/core/Toolbar';
import Typography from '@material-ui/core/Typography';
import MenuIcon from '@material-ui/icons/Menu';
import HomeIcon from '@material-ui/icons/Home';
import MenuItem from '@material-ui/core/MenuItem';
import Menu from '@material-ui/core/Menu';
import { withRouter } from "react-router-dom";
import useMediaQuery from '@material-ui/core/useMediaQuery';
import MenuBookIcon from '@material-ui/icons/MenuBook';
import CssBaseline from '@material-ui/core/CssBaseline';
import useScrollTrigger from '@material-ui/core/useScrollTrigger';
import Slide from '@material-ui/core/Slide';


const useStyles = makeStyles((theme) => ({
  root: {
    flexGrow: 1,
  },
  menuButton: {
    borderRadius: "50%",
    minWidth: 0,
    padding: "7px",
  },
  changeThemeButton: {
    borderRadius: "50%",
    minWidth: 0,
    padding: "7px",
  },
  title: {
    flexGrow: 1,
    display: "flex",
    alignItems: "center"
  },
  titleLogo: {
    margin: "-2px 0px 0px 5px",
  },
  buttonText: {
    color: "#ddd",
    fontSize: "15px",
  },
}));

function HideOnScroll(props) {
  const { children, window } = props;
  const trigger = useScrollTrigger({ target: window ? window() : undefined });
  return (
    <Slide appear={false} direction="down" in={!trigger}>
      {children}
    </Slide>
  );
}

const TopBar = (props) => {
  const [anchorEl, setAnchorEl] = React.useState(null);
  const { history, toggleTheme, isDarkTheme } = props;
  const classes = useStyles();
  const isMobile = useMediaQuery('(max-width:570px)');

  const handleMenu = (event) => {
    setAnchorEl(event.currentTarget);
  };

  const handleMenuClick = (pageURL) => {
    history.push(pageURL);
    setAnchorEl(null);
  };

  return (
    <div className={classes.root}>
      <CssBaseline />
      <HideOnScroll {...props}>
        <AppBar>
          <div className="container">
            <Toolbar>
              <Typography variant="h5" className={classes.title}>
                Article Share
                <MenuBookIcon className={classes.titleLogo} />
              </Typography>
              {isMobile ?
                (
                  <div >
                    <IconButton
                      edge="start"
                      className={classes.menuButton}
                      color="inherit"
                      aria-label="menu"
                      onClick={handleMenu}>
                      <MenuIcon />
                    </IconButton>
                    <Menu
                      id="menu-appbar"
                      anchorEl={anchorEl}
                      anchorOrigin={{
                        vertical: 'top',
                        horizontal: 'right',
                      }}
                      keepMounted
                      transformOrigin={{
                        vertical: 'top',
                        horizontal: 'right',
                      }}
                      open={!!anchorEl}
                      onClose={() => setAnchorEl(null)}>
                      <MenuItem onClick={() => handleMenuClick("/")}>Home</MenuItem>
                      <MenuItem onClick={() => handleMenuClick("/articles/name")}>Sigh in</MenuItem>
                    </Menu>
                  </div>
                ) :
                (
                  <nav className="navbar">
                    <ul className="navbar__list">
                      <li className="navbar__item">
                        <NavLink to="/" exact><Button startIcon={<HomeIcon />} className={classes.buttonText}>Home</Button></NavLink>
                      </li>
                      <li className="navbar__item">
                        <NavLink to="/login"><Button className={classes.buttonText}>Sign in</Button></NavLink>
                      </li>
                      <li className="navbar__item">
                        <NavLink to="/register"><Button className={classes.buttonText}>Sign up</Button></NavLink>
                      </li>
                      <li className="navbar__item">
                        <IconButton
                          aria-label="change theme"
                          component="span"
                          color="secondary"
                          className={classes.changeThemeButton}
                          onClick={toggleTheme}
                          variant="contained">
                          {isDarkTheme ? <NightsStayIcon /> : <WbSunnyIcon />}
                        </IconButton>
                      </li>
                    </ul>
                  </nav>
                )}
            </Toolbar>
          </div>
        </AppBar>
      </HideOnScroll>
    </div >
  );

}

export default withRouter(TopBar);