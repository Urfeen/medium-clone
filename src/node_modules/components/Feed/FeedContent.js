import React from 'react';
import Button from '@material-ui/core/Button';
import Dialog from '@material-ui/core/Dialog';
import DialogActions from '@material-ui/core/DialogActions';
import DialogContent from '@material-ui/core/DialogContent';
import Typography from '@material-ui/core/Typography';
import DialogTitle from '@material-ui/core/DialogTitle';
import LangsTranslate from "LangsTranslate/LangsTranslate.json";
import CancelIcon from '@material-ui/icons/Cancel';
import IconButton from '@material-ui/core/IconButton';

export default function FeedContent(props) {
  const [open, setOpen] = React.useState(false);
  const [scroll, setScroll] = React.useState('paper');
  const { currentLang, articleText, articleTitle } = props;

  const handleClickOpen = (scrollType) => () => {
    setOpen(true);
    setScroll(scrollType);
  };

  const handleClose = () => {
    setOpen(false);
  };

  const descriptionElementRef = React.useRef(null);
  React.useEffect(() => {
    if (open) {
      const { current: descriptionElement } = descriptionElementRef;
      if (descriptionElement !== null) {
        descriptionElement.focus();
      }
    }
  }, [open]);

  return (
    <div>
      <Button variant="outlined" onClick={handleClickOpen('paper')}>
        {LangsTranslate[currentLang].Feeds.feed["read"]}
      </Button>
      <Dialog
        open={open}
        onClose={handleClose}
        scroll={scroll}
        aria-labelledby="scroll-dialog-title"
        aria-describedby="scroll-dialog-description"
      >
        <DialogTitle id="scroll-dialog-title">{articleTitle}</DialogTitle>
        <DialogContent dividers={scroll === 'paper'}>
          {articleText.split(/\n/g).map((e, i) => {
            return e ? <Typography key={i} style={{ wordWrap: "break-word" }}>{e}</Typography> : <br key={i} />
          })}
        </DialogContent>
        <DialogActions>
          <IconButton aria-label="cancel" onClick={handleClose} color="primary">
            <CancelIcon />
          </IconButton>
        </DialogActions>
      </Dialog>
    </div>
  );
}
