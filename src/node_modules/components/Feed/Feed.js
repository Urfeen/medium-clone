import React, { useState } from 'react';
import Card from '@material-ui/core/Card';
import CardHeader from '@material-ui/core/CardHeader';
import CardContent from '@material-ui/core/CardContent';
import CardActions from '@material-ui/core/CardActions';
import Collapse from '@material-ui/core/Collapse';
import Avatar from '@material-ui/core/Avatar';
import IconButton from '@material-ui/core/IconButton';
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';
import ThumbDownIcon from '@material-ui/icons/ThumbDown';
import ThumbUpIcon from '@material-ui/icons/ThumbUp';
import CommentIcon from '@material-ui/icons/Comment';
import FeedContent from "components/Feed/FeedContent";
import { makeStyles } from '@material-ui/core/styles';
import Comments from "components/Comments/Comments.js";

const useStyles = makeStyles({
  iconButtons: {
    borderRadius: "15px",
    border: "1px solid #88888880",
    margin: "0px 5px 0px 0px",
    padding: "7px"
  },
  userPhoto: {
    objectFit: "cover",
    height: "100%",
    width: "100%",
    display: "block"
  }
});

export default function RecipeReviewCard(props) {
  const [expanded, setExpanded] = React.useState(false);
  const styles = useStyles();
  const { currentLang, articleDesc, articleOwner, articleTags, articleText, articleTitle, dislikes, likes, publishedDate, articleOwnerPhoto, articleId, comments } = props;
  const [feedLikes, setFeedLikes] = useState(likes);
  const [feedDisikes, setFeedDislikes] = useState(dislikes);
  const [feedComments, setFeedComments] = useState(comments);

  const handleExpandClick = () => {
    setExpanded(!expanded);
  };

  return (
    <Card style={{ borderColor: "#888" }} variant="outlined">
      <CardHeader
        avatar={
          <Avatar>
            {articleOwnerPhoto && <img className={styles.userPhoto} src={articleOwnerPhoto} alt="" />}
          </Avatar>
        }
        action={
          <div style={{ margin: "15px 0px 0px 0px", display: "flex", flexWrap: "wrap", rowGap: "5px" }}>
            <IconButton
              aria-label="comments"
              onClick={handleExpandClick}
              aria-expanded={expanded}
              className={styles.iconButtons}
            >
              <CommentIcon style={{ margin: "0px 5px 0px 0px" }} />
              <span>{(Object.keys(feedComments).length).toLocaleString("en")}</span>
            </IconButton>
            <div>
              <IconButton
                aria-label="likes"
                className={styles.iconButtons}
                onClick={() => { }}
              >
                <ThumbUpIcon style={{ margin: "0px 5px 0px 0px" }} />
                <span>{(likes).toLocaleString("en")}</span>
              </IconButton>
              <IconButton
                aria-label="dislikes"
                className={styles.iconButtons}
                onClick={() => { }}
              >
                <ThumbDownIcon style={{ margin: "0px 5px 0px 0px" }} />
                <span>{(dislikes).toLocaleString("en")}</span>
              </IconButton>
            </div>
          </div>
        }
        style={{ flexWrap: "wrap", padding: "15px 15px 8px 15px" }}
        title={articleOwner}
        subheader={publishedDate}
      />
      <CardContent style={{ padding: "0px 16px 16px" }}>
        <Typography style={{ margin: "0px 0px 7px 0px" }} variant="h5" color="textPrimary" component="p">
          {articleTitle}
        </Typography>
        <Typography style={{ margin: "0px 0px 15px 0px" }} variant="body1" color="textSecondary" component="p">
          {articleDesc}
        </Typography>
        <FeedContent articleTitle={articleTitle} articleText={articleText} currentLang={currentLang} />
        <CardActions style={{ display: "flex", flexWrap: "wrap", gap: "5px", padding: articleTags ? "10px 0px 0px" : '0px' }}>
          {articleTags ? articleTags.split(" ").map((tag, i) => {
            return <Button key={i} style={{ margin: "0" }} variant="contained" color="primary" size="small">{tag.substring(1)}</Button>
          }) : null}
        </CardActions>
      </CardContent>
      <Collapse in={expanded} timeout="auto" unmountOnExit>
        <CardContent style={{ padding: "15px" }}>
          <Comments
            feedComments={feedComments}
            setFeedComments={setFeedComments}
            articleId={articleId}
            currentLang={currentLang}
          />
        </CardContent>
      </Collapse>
    </Card>
  );
}
