{"version":3,"sources":["index.js"],"names":["App","useState","JSON","parse","localStorage","getItem","isDarkTheme","SetDarkTheme","currentLang","setLang","isLogin","setIsLogin","darkTheme","createMuiTheme","palette","type","primary","main","lightBlue","secondary","indigo","lightTheme","deepPurple","A200","pink","background","paper","default","useEffect","projectDB","ref","on","snapshot","val","setItem","theme","params","particleDark","particleLight","style","position","top","left","right","bottom","zIndex","toggleTheme","prevTheme","stringify","toggleLang","window","addEventListener","e","preventDefault","console","log","ReactDOM","render","document","getElementById"],"mappings":"0SAaMA,EAAM,WAAO,IAAD,EACoBC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,iBAD7D,mBACTC,EADS,KACIC,EADJ,OAEeN,mBAASG,aAAaC,QAAQ,gBAAkB,MAF/D,mBAETG,EAFS,KAEIC,EAFJ,OAGcR,qBAAWG,aAAaC,QAAQ,kBAH9C,mBAGTK,EAHS,KAGAC,EAHA,KAIVC,EAAYC,YAAe,CAC/BC,QAAS,CACPC,KAAM,OACNC,QAAS,CACPC,KAAMC,IAAU,MAElBC,UAAW,CACTF,KAAMG,IAAO,SAIbC,EAAaR,YAAe,CAChCC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAMK,IAAWC,MAEnBJ,UAAW,CACTF,KAAMO,IAAK,MAEbC,WAAY,CACVC,MAAO,UACPC,QAAS,cAgCf,OAVAC,qBAAU,WACRC,IAAUC,IAAI,SAAW1B,aAAaC,QAAQ,kBAAkB0B,GAAG,SAAS,SAACC,GAC9DA,EAASC,QAEpB7B,aAAa8B,QAAQ,gBAAiB,IACtCvB,GAAW,SAGd,IAGD,cAAC,IAAD,CAAewB,MAAO7B,EAAcM,EAAYS,EAAhD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEe,OAAQ9B,EAAc+B,EAAeC,EACrCC,MAAO,CAAEC,SAAU,QAASC,IAAK,IAAKC,KAAM,IAAKC,MAAO,IAAKC,OAAQ,IAAKC,OAAQ,QAEpF,cAAC,IAAD,CACEC,YAnCR,WACEvC,GAAa,SAACwC,GAEZ,OADA3C,aAAa8B,QAAQ,cAAehC,KAAK8C,WAAWD,KAC3CA,MAiCLE,WA7BR,WACsB,OAAhBzC,GACFC,EAAQ,MACRL,aAAa8B,QAAQ,cAAe,QAEpCzB,EAAQ,MACRL,aAAa8B,QAAQ,cAAe,QAwBhC5B,YAAaA,EACbE,YAAaA,EACbE,QAASA,EACTC,WAAYA,IAEd,cAAC,IAAD,CACEH,YAAaA,EACbE,QAASA,EACTC,WAAYA,UAOtBuC,OAAOC,iBAAiB,WAAW,SAACC,GAClCA,EAAEC,iBACFC,QAAQC,IAAI,sBAGdC,IAASC,OACP,cAACzD,EAAD,IACA0D,SAASC,eAAe,U","file":"static/js/main.8fb571ab.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Routers from \"Routers.js\";\r\nimport TopBar from \"components/TopBar/TopBar.js\";\r\nimport particleDark from \"ParticlesConfigs/particlesjs-dark.json\";\r\nimport particleLight from \"ParticlesConfigs/particlesjs-light.json\";\r\nimport \"./index.scss\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { lightBlue, indigo, deepPurple, pink } from \"@material-ui/core/colors\";\r\nimport Particles from 'react-particles-js';\r\nimport { projectDB } from \"firebaseConfig/firebaseConfig.js\";\r\n\r\nconst App = () => {\r\n  const [isDarkTheme, SetDarkTheme] = useState(JSON.parse(localStorage.getItem(\"isDarkTheme\")));\r\n  const [currentLang, setLang] = useState(localStorage.getItem(\"currentLang\") || \"uk\");\r\n  const [isLogin, setIsLogin] = useState(!!localStorage.getItem(\"currentUserId\"));\r\n  const darkTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\",\r\n      primary: {\r\n        main: lightBlue[800],\r\n      },\r\n      secondary: {\r\n        main: indigo[800],\r\n      },\r\n    },\r\n  })\r\n  const lightTheme = createMuiTheme({\r\n    palette: {\r\n      type: \"light\",\r\n      primary: {\r\n        main: deepPurple.A200,\r\n      },\r\n      secondary: {\r\n        main: pink[700],\r\n      },\r\n      background: {\r\n        paper: \"#fafafa\",\r\n        default: \"#dddddd\"\r\n      }\r\n    },\r\n  })\r\n\r\n  function toggleThemeHandler() {\r\n    SetDarkTheme((prevTheme) => {\r\n      localStorage.setItem(\"isDarkTheme\", JSON.stringify(!prevTheme));\r\n      return (!prevTheme)\r\n    });\r\n  }\r\n\r\n  function toggleLangHandler() {\r\n    if (currentLang === \"uk\") {\r\n      setLang(\"en\");\r\n      localStorage.setItem(\"currentLang\", \"en\");\r\n    } else {\r\n      setLang(\"uk\");\r\n      localStorage.setItem(\"currentLang\", \"uk\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    projectDB.ref('users/' + localStorage.getItem(\"currentUserId\")).on('value', (snapshot) => {\r\n      const data = snapshot.val();\r\n      if (!data) {\r\n        localStorage.setItem(\"currentUserId\", \"\");\r\n        setIsLogin(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={isDarkTheme ? darkTheme : lightTheme}>\r\n      <BrowserRouter>\r\n        <Particles\r\n          params={isDarkTheme ? particleDark : particleLight}\r\n          style={{ position: \"fixed\", top: \"0\", left: \"0\", right: \"0\", bottom: \"0\", zIndex: \"-1\" }}\r\n        />\r\n        <TopBar\r\n          toggleTheme={toggleThemeHandler}\r\n          toggleLang={toggleLangHandler}\r\n          isDarkTheme={isDarkTheme}\r\n          currentLang={currentLang}\r\n          isLogin={isLogin}\r\n          setIsLogin={setIsLogin}\r\n        />\r\n        <Routers\r\n          currentLang={currentLang}\r\n          isLogin={isLogin}\r\n          setIsLogin={setIsLogin}\r\n        />\r\n      </BrowserRouter>\r\n    </ThemeProvider >\r\n  )\r\n}\r\n\r\nwindow.addEventListener(\"offline\", (e) => {\r\n  e.preventDefault();\r\n  console.log(\"connection lost\");\r\n});\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}